name: Acceptance Tests

on:
  push:
    branches: [ ELN ]

jobs:

  docker_container:
    runs-on: self-hosted
    strategy:
      matrix:
        bundler: [1.17.3]
        npm: [7.11.1]
    container: 
      image: complat/complat-ubuntu-runner:development-5.3

    services:
      postgres:
        image: postgres
        ports:
          - 5433:5432
        env:
          POSTGRES_PASSWORD: postgres
          #NODE_OPTIONS: '--max_old_space_size=6000'
          #NODE_OPTIONS: '--max_old_space_size=4096'
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
          
    steps:
      - name: git clone + postgres
        working-directory: /home/gitlab-runner
        # TODO rm?
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5433
          POSTGRES_DB: chemotion_test
          POSTGRES_USER: chemotion_test
          POSTGRES_PASSWORD: 123456
        run: |
            # owner was root before
            sudo chown -R gitlab-runner:gitlab-runner /github/home
            sudo git clone --branch development-5 --depth 1 https://github.com/ComPlat/chemotion_ELN.git 
            # sudo git clone --branch $(echo $GITHUB_REF | cut -d'/' -f 3) --depth 1 https://github.com/ComPlat/chemotion_ELN.git 

            cd chemotion_ELN
            export NODE_VERSION="${NODE_VERSION}:$(cat .nvmrc)"

            cd config
            sudo cp database.yml.gitlab database.yml
            sudo cp -f storage.yml.example storage.yml
            sudo touch datacollectors.yml
            sudo cp -f profile_default.yml.example profile_default.yml
            sudo touch klasses.json

            echo "POSTGRES"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE ROLE chemotion_test LOGIN CREATEDB NOSUPERUSER PASSWORD '123456'"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE DATABASE chemotion_test OWNER chemotion_test;"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE ROLE chemotion_dev LOGIN CREATEDB SUPERUSER PASSWORD '123456'"
            psql -d postgresql://postgres:postgres@postgres/postgres -c "CREATE DATABASE chemotion_dev OWNER chemotion_test;"
            psql -d postgresql://chemotion_test:123456@postgres/chemotion_test -c 'CREATE EXTENSION IF NOT EXISTS "pg_trgm"; CREATE EXTENSION IF NOT EXISTS "hstore"; CREATE EXTENSION IF NOT EXISTS "uuid-ossp";'
            psql -d postgresql://chemotion_test:123456@postgres/chemotion_test -c "\du"
            cd ..
            # TODO rm?
            sudo chmod -R +x spec
            cd ..
            sudo chown -R gitlab-runner:gitlab-runner chemotion_ELN

      - name: bundle + node install
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
            /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && gem install bundler -v ${{ matrix.bundler }} --no-document && bundle install -j 3 --path ../shared/bundle"
            /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && npm install -g npm@${{ matrix.npm }}"
            /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && npm install yarn -g"
            /bin/bash -l -c "source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && yarn install"

      - name: testacceptance
        working-directory: /home/gitlab-runner/chemotion_ELN
        run: |
            echo "RAKE DB"
            /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && RAILS_ENV=test bundle exec rake db:test:prepare"
            echo "PRECOMPILE"
            /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && RAILS_ENV=test bundle exec rake assets:precompile"
            mv public/welcome-message-sample.md public/welcome-message.md
            echo "TESTACCEPTANCE"
            /bin/bash -l -c "source /home/gitlab-runner/.rvm/scripts/rvm && source /home/gitlab-runner/.nvm/nvm.sh && nvm use $NODE_VERSION && RAILS_ENV=test bundle exec rspec spec/features"